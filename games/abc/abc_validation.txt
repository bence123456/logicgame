List(TileBase) tiles = map.getTileList();

for (TileBase tile : tiles) {
    if(tile.isHelper()) {
        Character helperChar = tile.getCharValue(1);
        List(TileBase) playableTiles = map.getPlayableTilesForMarginHelperTile(tile);

        for (int i=0; i<playableTiles.size(); i++) {
            TileBase actualTile = playableTiles.get(i);
            Character firstChar = actualTile.getCharValue(1);

            if (!map.isNull(firstChar)) {
                if (firstChar.equals(helperChar)) {
                    break;
                } else {
                    return false;
                }
            }
        }
    }
}

boolean valid = map.numberOfItemsInAllRow([&A],1) &&
            map.numberOfItemsInAllRow([&B],1) &&
            map.numberOfItemsInAllRow([&C],1) &&
            map.numberOfItemsInAllColumn([&A],1) &&
            map.numberOfItemsInAllColumn([&B],1) &&
            map.numberOfItemsInAllColumn([&C],1);
return valid;